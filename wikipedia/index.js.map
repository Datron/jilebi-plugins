{"version":3,"file":"index.js","sources":["index.ts"],"sourcesContent":["/**\r\n * Wikipedia Jilebi Plugin\r\n * Provides comprehensive Wikipedia API access through Jilebi plugin interface\r\n * \r\n */\r\n\r\n// Jilebi Plugin Response Types\r\ninterface JilebiTextContent {\r\n\ttype: 'text';\r\n\ttext: string;\r\n}\r\n\r\ninterface JilebiToolResponse {\r\n\tcontent: JilebiTextContent[];\r\n\tisError?: boolean;\r\n}\r\n\r\n// Environment interface for accessing configuration\r\ninterface Environment {\r\n\tWIKIPEDIA_LANGUAGE?: string;\r\n\tWIKIPEDIA_COUNTRY?: string;\r\n\tWIKIPEDIA_ENABLE_CACHE?: string;\r\n\tWIKIPEDIA_ACCESS_TOKEN?: string;\r\n}\r\n\r\n// Wikipedia Client Helper Class\r\nclass WikipediaClient {\r\n\tprivate language: string;\r\n\tprivate country: string | null;\r\n\tprivate enableCache: boolean;\r\n\tprivate accessToken: string | null;\r\n\tprivate baseLanguage: string;\r\n\tprivate apiUrl: string;\r\n\tprivate userAgent: string;\r\n\r\n\t// Language variant mappings\r\n\tprivate static LANGUAGE_VARIANTS: Record<string, string> = {\r\n\t\t'zh-hans': 'zh',\r\n\t\t'zh-hant': 'zh',\r\n\t\t'zh-tw': 'zh',\r\n\t\t'zh-hk': 'zh',\r\n\t\t'zh-mo': 'zh',\r\n\t\t'zh-cn': 'zh',\r\n\t\t'zh-sg': 'zh',\r\n\t\t'zh-my': 'zh',\r\n\t\t'sr-latn': 'sr',\r\n\t\t'sr-cyrl': 'sr',\r\n\t\t'no': 'nb',\r\n\t\t'ku-latn': 'ku',\r\n\t\t'ku-arab': 'ku',\r\n\t};\r\n\r\n\t// Country to language mappings (partial list for common countries)\r\n\tprivate static COUNTRY_TO_LANGUAGE: Record<string, string> = {\r\n\t\t'US': 'en', 'USA': 'en', 'United States': 'en',\r\n\t\t'UK': 'en', 'GB': 'en', 'United Kingdom': 'en',\r\n\t\t'CA': 'en', 'Canada': 'en',\r\n\t\t'AU': 'en', 'Australia': 'en',\r\n\t\t'CN': 'zh-hans', 'China': 'zh-hans',\r\n\t\t'TW': 'zh-tw', 'Taiwan': 'zh-tw',\r\n\t\t'HK': 'zh-hk', 'Hong Kong': 'zh-hk',\r\n\t\t'DE': 'de', 'Germany': 'de',\r\n\t\t'FR': 'fr', 'France': 'fr',\r\n\t\t'ES': 'es', 'Spain': 'es',\r\n\t\t'IT': 'it', 'Italy': 'it',\r\n\t\t'JP': 'ja', 'Japan': 'ja',\r\n\t\t'KR': 'ko', 'South Korea': 'ko',\r\n\t\t'IN': 'hi', 'India': 'hi',\r\n\t\t'BR': 'pt', 'Brazil': 'pt',\r\n\t\t'MX': 'es', 'Mexico': 'es',\r\n\t\t'RU': 'ru', 'Russia': 'ru',\r\n\t};\r\n\r\n\tconstructor(language: string = 'en', country: string | null = null, enableCache: boolean = false, accessToken: string | null = null) {\r\n\t\tthis.country = country;\r\n\t\tthis.enableCache = enableCache;\r\n\t\tthis.accessToken = accessToken;\r\n\t\tthis.userAgent = 'WikipediaJilebiPlugin/1.6.0 (https://github.com/rudra-ravi/wikipedia-mcp)';\r\n\r\n\t\t// Resolve country to language if provided\r\n\t\tif (country) {\r\n\t\t\tthis.language = this.resolveCountryToLanguage(country);\r\n\t\t} else {\r\n\t\t\tthis.language = language;\r\n\t\t}\r\n\r\n\t\t// Parse language variant\r\n\t\tthis.baseLanguage = this.parseLanguageVariant(this.language);\r\n\t\tthis.apiUrl = `https://${this.baseLanguage}.wikipedia.org/w/api.php`;\r\n\t}\r\n\r\n\tprivate resolveCountryToLanguage(country: string): string {\r\n\t\tconst countryUpper = country.toUpperCase().trim();\r\n\t\tconst countryTitle = country.charAt(0).toUpperCase() + country.slice(1).toLowerCase();\r\n\r\n\t\tif (WikipediaClient.COUNTRY_TO_LANGUAGE[countryUpper]) {\r\n\t\t\treturn WikipediaClient.COUNTRY_TO_LANGUAGE[countryUpper];\r\n\t\t}\r\n\t\tif (WikipediaClient.COUNTRY_TO_LANGUAGE[countryTitle]) {\r\n\t\t\treturn WikipediaClient.COUNTRY_TO_LANGUAGE[countryTitle];\r\n\t\t}\r\n\t\tif (WikipediaClient.COUNTRY_TO_LANGUAGE[country]) {\r\n\t\t\treturn WikipediaClient.COUNTRY_TO_LANGUAGE[country];\r\n\t\t}\r\n\r\n\t\tthrow new Error(`Unsupported country/locale: '${country}'`);\r\n\t}\r\n\r\n\tprivate parseLanguageVariant(language: string): string {\r\n\t\tif (WikipediaClient.LANGUAGE_VARIANTS[language]) {\r\n\t\t\treturn WikipediaClient.LANGUAGE_VARIANTS[language];\r\n\t\t}\r\n\t\treturn language;\r\n\t}\r\n\r\n\tprivate getHeaders(): Record<string, string> {\r\n\t\tconst headers: Record<string, string> = {\r\n\t\t\t'User-Agent': this.userAgent,\r\n\t\t\t'Accept': 'application/json',\r\n\t\t};\r\n\r\n\t\tif (this.accessToken) {\r\n\t\t\theaders['Authorization'] = `Bearer ${this.accessToken}`;\r\n\t\t}\r\n\r\n\t\treturn headers;\r\n\t}\r\n\r\n\tasync search(query: string, limit: number = 10): Promise<any[]> {\r\n\t\tif (!query || !query.trim()) {\r\n\t\t\treturn [];\r\n\t\t}\r\n\r\n\t\tconst trimmedQuery = query.trim().substring(0, 300);\r\n\t\tconst validLimit = Math.min(Math.max(limit, 1), 500);\r\n\r\n\t\tconst params = new URLSearchParams({\r\n\t\t\taction: 'query',\r\n\t\t\tformat: 'json',\r\n\t\t\tlist: 'search',\r\n\t\t\tutf8: '1',\r\n\t\t\tsrsearch: trimmedQuery,\r\n\t\t\tsrlimit: validLimit.toString(),\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(`${this.apiUrl}?${params}`, {\r\n\t\t\t\theaders: this.getHeaders(),\r\n\t\t\t});\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`HTTP error! status: ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tif (data.error) {\r\n\t\t\t\tconsole.error('Wikipedia API error:', data.error);\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\r\n\t\t\tconst searchResults = data.query?.search || [];\r\n\t\t\treturn searchResults.map((item: any) => ({\r\n\t\t\t\ttitle: item.title,\r\n\t\t\t\tsnippet: item.snippet || '',\r\n\t\t\t\tpageid: item.pageid || 0,\r\n\t\t\t\twordcount: item.wordcount || 0,\r\n\t\t\t\ttimestamp: item.timestamp || '',\r\n\t\t\t}));\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Search error:', error);\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\r\n\tasync getArticle(title: string): Promise<any> {\r\n\t\tconst params = new URLSearchParams({\r\n\t\t\taction: 'query',\r\n\t\t\tformat: 'json',\r\n\t\t\tprop: 'extracts|info|categories|links',\r\n\t\t\ttitles: title,\r\n\t\t\texintro: '0',\r\n\t\t\texplaintext: '1',\r\n\t\t\tinprop: 'url',\r\n\t\t\tcllimit: '100',\r\n\t\t\tpllimit: '100',\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(`${this.apiUrl}?${params}`, {\r\n\t\t\t\theaders: this.getHeaders(),\r\n\t\t\t});\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`HTTP error! status: ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconst pages = data.query?.pages || {};\r\n\t\t\tconst page = Object.values(pages)[0] as any;\r\n\r\n\t\t\tif (!page || page.pageid < 0) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttitle,\r\n\t\t\t\t\texists: false,\r\n\t\t\t\t\terror: 'Page does not exist',\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tconst categories = (page.categories || []).map((cat: any) => cat.title);\r\n\t\t\tconst links = (page.links || []).map((link: any) => link.title).slice(0, 100);\r\n\r\n\t\t\treturn {\r\n\t\t\t\ttitle: page.title,\r\n\t\t\t\tpageid: page.pageid,\r\n\t\t\t\ttext: page.extract || '',\r\n\t\t\t\turl: page.fullurl,\r\n\t\t\t\tcategories,\r\n\t\t\t\tlinks,\r\n\t\t\t\texists: true,\r\n\t\t\t};\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Get article error:', error);\r\n\t\t\treturn {\r\n\t\t\t\ttitle,\r\n\t\t\t\texists: false,\r\n\t\t\t\terror: String(error),\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tasync getSummary(title: string): Promise<string> {\r\n\t\tconst params = new URLSearchParams({\r\n\t\t\taction: 'query',\r\n\t\t\tformat: 'json',\r\n\t\t\tprop: 'extracts',\r\n\t\t\ttitles: title,\r\n\t\t\texintro: '1',\r\n\t\t\texplaintext: '1',\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(`${this.apiUrl}?${params}`, {\r\n\t\t\t\theaders: this.getHeaders(),\r\n\t\t\t});\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`HTTP error! status: ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconst pages = data.query?.pages || {};\r\n\t\t\tconst page = Object.values(pages)[0] as any;\r\n\r\n\t\t\tif (!page || page.pageid < 0) {\r\n\t\t\t\treturn `No Wikipedia article found for '${title}'.`;\r\n\t\t\t}\r\n\r\n\t\t\treturn page.extract || 'No summary available.';\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Get summary error:', error);\r\n\t\t\treturn `Error retrieving summary for '${title}': ${error}`;\r\n\t\t}\r\n\t}\r\n\r\n\tasync testConnectivity(): Promise<any> {\r\n\t\tconst params = new URLSearchParams({\r\n\t\t\taction: 'query',\r\n\t\t\tformat: 'json',\r\n\t\t\tmeta: 'siteinfo',\r\n\t\t\tsiprop: 'general',\r\n\t\t});\r\n\r\n\t\tconst startTime = Date.now();\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(`${this.apiUrl}?${params}`, {\r\n\t\t\t\theaders: this.getHeaders(),\r\n\t\t\t});\r\n\r\n\t\t\tconst endTime = Date.now();\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`HTTP error! status: ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconst siteInfo = data.query?.general || {};\r\n\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'success',\r\n\t\t\t\turl: this.apiUrl,\r\n\t\t\t\tlanguage: this.baseLanguage,\r\n\t\t\t\tsite_name: siteInfo.sitename || 'Unknown',\r\n\t\t\t\tserver: siteInfo.server || 'Unknown',\r\n\t\t\t\tresponse_time_ms: endTime - startTime,\r\n\t\t\t};\r\n\t\t} catch (error) {\r\n\t\t\treturn {\r\n\t\t\t\tstatus: 'failed',\r\n\t\t\t\turl: this.apiUrl,\r\n\t\t\t\tlanguage: this.baseLanguage,\r\n\t\t\t\terror: String(error),\r\n\t\t\t\terror_type: error instanceof Error ? error.constructor.name : 'Unknown',\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tasync getSections(title: string): Promise<any[]> {\r\n\t\tconst params = new URLSearchParams({\r\n\t\t\taction: 'parse',\r\n\t\t\tformat: 'json',\r\n\t\t\tpage: title,\r\n\t\t\tprop: 'sections',\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(`${this.apiUrl}?${params}`, {\r\n\t\t\t\theaders: this.getHeaders(),\r\n\t\t\t});\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`HTTP error! status: ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\r\n\t\t\tif (data.error) {\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\r\n\t\t\treturn data.parse?.sections || [];\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Get sections error:', error);\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\r\n\tasync getLinks(title: string): Promise<string[]> {\r\n\t\tconst params = new URLSearchParams({\r\n\t\t\taction: 'query',\r\n\t\t\tformat: 'json',\r\n\t\t\tprop: 'links',\r\n\t\t\ttitles: title,\r\n\t\t\tpllimit: 'max',\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(`${this.apiUrl}?${params}`, {\r\n\t\t\t\theaders: this.getHeaders(),\r\n\t\t\t});\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`HTTP error! status: ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconst pages = data.query?.pages || {};\r\n\t\t\tconst page = Object.values(pages)[0] as any;\r\n\r\n\t\t\tif (!page || page.pageid < 0) {\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\r\n\t\t\treturn (page.links || []).map((link: any) => link.title);\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Get links error:', error);\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\r\n\tasync getRelatedTopics(title: string, limit: number = 10): Promise<any[]> {\r\n\t\ttry {\r\n\t\t\tconst links = await this.getLinks(title);\r\n\t\t\tconst related: any[] = [];\r\n\r\n\t\t\tfor (const linkTitle of links.slice(0, limit)) {\r\n\t\t\t\tconst summary = await this.getSummary(linkTitle);\r\n\t\t\t\tconst truncatedSummary = summary.length > 200 ? summary.substring(0, 200) + '...' : summary;\r\n\r\n\t\t\t\trelated.push({\r\n\t\t\t\t\ttitle: linkTitle,\r\n\t\t\t\t\tsummary: truncatedSummary,\r\n\t\t\t\t\ttype: 'link',\r\n\t\t\t\t});\r\n\r\n\t\t\t\tif (related.length >= limit) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn related;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Get related topics error:', error);\r\n\t\t\treturn [];\r\n\t\t}\r\n\t}\r\n\r\n\tasync summarizeForQuery(title: string, query: string, maxLength: number = 250): Promise<string> {\r\n\t\ttry {\r\n\t\t\tconst article = await this.getArticle(title);\r\n\r\n\t\t\tif (!article.exists) {\r\n\t\t\t\treturn `No Wikipedia article found for '${title}'.`;\r\n\t\t\t}\r\n\r\n\t\t\tconst textContent = article.text;\r\n\t\t\tconst queryLower = query.toLowerCase();\r\n\t\t\tconst textLower = textContent.toLowerCase();\r\n\r\n\t\t\tconst startIndex = textLower.indexOf(queryLower);\r\n\r\n\t\t\tif (startIndex === -1) {\r\n\t\t\t\t// Query not found, return beginning of text\r\n\t\t\t\tconst snippet = textContent.substring(0, maxLength);\r\n\t\t\t\treturn snippet.length >= maxLength ? snippet + '...' : snippet;\r\n\t\t\t}\r\n\r\n\t\t\t// Get context around the query\r\n\t\t\tconst contextStart = Math.max(0, startIndex - Math.floor(maxLength / 2));\r\n\t\t\tconst contextEnd = Math.min(textContent.length, startIndex + query.length + Math.floor(maxLength / 2));\r\n\r\n\t\t\tlet snippet = textContent.substring(contextStart, contextEnd);\r\n\r\n\t\t\tif (snippet.length > maxLength) {\r\n\t\t\t\tsnippet = snippet.substring(0, maxLength);\r\n\t\t\t}\r\n\r\n\t\t\treturn snippet.length >= maxLength || contextEnd < textContent.length ? snippet + '...' : snippet;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Summarize for query error:', error);\r\n\t\t\treturn `Error generating query-focused summary for '${title}': ${error}`;\r\n\t\t}\r\n\t}\r\n\r\n\tasync summarizeSection(title: string, sectionTitle: string, maxLength: number = 150): Promise<string> {\r\n\t\ttry {\r\n\t\t\tconst sections = await this.getSections(title);\r\n\t\t\tconst targetSection = sections.find(\r\n\t\t\t\t(s: any) => s.line?.toLowerCase() === sectionTitle.toLowerCase()\r\n\t\t\t);\r\n\r\n\t\t\tif (!targetSection) {\r\n\t\t\t\treturn `Section '${sectionTitle}' not found in article '${title}'.`;\r\n\t\t\t}\r\n\r\n\t\t\t// Get the section content\r\n\t\t\tconst params = new URLSearchParams({\r\n\t\t\t\taction: 'parse',\r\n\t\t\t\tformat: 'json',\r\n\t\t\t\tpage: title,\r\n\t\t\t\tprop: 'text',\r\n\t\t\t\tsection: targetSection.index,\r\n\t\t\t\tdisablelimitreport: '1',\r\n\t\t\t});\r\n\r\n\t\t\tconst response = await fetch(`${this.apiUrl}?${params}`, {\r\n\t\t\t\theaders: this.getHeaders(),\r\n\t\t\t});\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`HTTP error! status: ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconst html = data.parse?.text?.['*'] || '';\r\n\r\n\t\t\t// Simple HTML to text conversion (remove tags)\r\n\t\t\tconst text = html.replace(/<[^>]*>/g, ' ').replace(/\\s+/g, ' ').trim();\r\n\r\n\t\t\tif (!text) {\r\n\t\t\t\treturn `Section '${sectionTitle}' is empty in article '${title}'.`;\r\n\t\t\t}\r\n\r\n\t\t\tconst summary = text.substring(0, maxLength);\r\n\t\t\treturn text.length > maxLength ? summary + '...' : summary;\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Summarize section error:', error);\r\n\t\t\treturn `Error summarizing section '${sectionTitle}': ${error}`;\r\n\t\t}\r\n\t}\r\n\r\n\tasync extractFacts(title: string, topicWithinArticle: string | null = null, count: number = 5): Promise<string[]> {\r\n\t\ttry {\r\n\t\t\tlet textToProcess = '';\r\n\r\n\t\t\tif (topicWithinArticle) {\r\n\t\t\t\t// Try to get section content\r\n\t\t\t\tconst sectionText = await this.summarizeSection(title, topicWithinArticle, 1000);\r\n\t\t\t\tif (!sectionText.startsWith('Section') && !sectionText.startsWith('Error')) {\r\n\t\t\t\t\ttextToProcess = sectionText;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// Fallback to summary\r\n\t\t\t\t\ttextToProcess = await this.getSummary(title);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\ttextToProcess = await this.getSummary(title);\r\n\t\t\t}\r\n\r\n\t\t\tif (!textToProcess || textToProcess.startsWith('No Wikipedia') || textToProcess.startsWith('Error')) {\r\n\t\t\t\treturn ['No content found to extract facts from.'];\r\n\t\t\t}\r\n\r\n\t\t\t// Basic sentence splitting\r\n\t\t\tconst sentences = textToProcess\r\n\t\t\t\t.split('.')\r\n\t\t\t\t.map(s => s.trim())\r\n\t\t\t\t.filter(s => s.length > 10); // Filter out very short fragments\r\n\r\n\t\t\tconst facts: string[] = [];\r\n\t\t\tfor (let i = 0; i < Math.min(count, sentences.length); i++) {\r\n\t\t\t\tif (sentences[i]) {\r\n\t\t\t\t\tfacts.push(sentences[i] + '.');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn facts.length > 0 ? facts : ['Could not extract facts from the provided text.'];\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Extract facts error:', error);\r\n\t\t\treturn [`Error extracting key facts for '${title}': ${error}`];\r\n\t\t}\r\n\t}\r\n\r\n\tasync getCoordinates(title: string): Promise<any> {\r\n\t\tconst params = new URLSearchParams({\r\n\t\t\taction: 'query',\r\n\t\t\tformat: 'json',\r\n\t\t\tprop: 'coordinates',\r\n\t\t\ttitles: title,\r\n\t\t});\r\n\r\n\t\ttry {\r\n\t\t\tconst response = await fetch(`${this.apiUrl}?${params}`, {\r\n\t\t\t\theaders: this.getHeaders(),\r\n\t\t\t});\r\n\r\n\t\t\tif (!response.ok) {\r\n\t\t\t\tthrow new Error(`HTTP error! status: ${response.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await response.json();\r\n\t\t\tconst pages = data.query?.pages || {};\r\n\t\t\tconst page = Object.values(pages)[0] as any;\r\n\r\n\t\t\tif (!page || page.pageid < 0) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttitle,\r\n\t\t\t\t\tcoordinates: null,\r\n\t\t\t\t\texists: false,\r\n\t\t\t\t\terror: 'Page does not exist',\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tconst coordinates = page.coordinates || [];\r\n\r\n\t\t\tif (coordinates.length === 0) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttitle: page.title,\r\n\t\t\t\t\tpageid: page.pageid,\r\n\t\t\t\t\tcoordinates: null,\r\n\t\t\t\t\texists: true,\r\n\t\t\t\t\terror: null,\r\n\t\t\t\t\tmessage: 'No coordinates available for this article',\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tconst processedCoordinates = coordinates.map((coord: any) => ({\r\n\t\t\t\tlatitude: coord.lat,\r\n\t\t\t\tlongitude: coord.lon,\r\n\t\t\t\tprimary: coord.primary || false,\r\n\t\t\t\tglobe: coord.globe || 'earth',\r\n\t\t\t\ttype: coord.type || '',\r\n\t\t\t\tname: coord.name || '',\r\n\t\t\t\tregion: coord.region || '',\r\n\t\t\t\tcountry: coord.country || '',\r\n\t\t\t}));\r\n\r\n\t\t\treturn {\r\n\t\t\t\ttitle: page.title,\r\n\t\t\t\tpageid: page.pageid,\r\n\t\t\t\tcoordinates: processedCoordinates,\r\n\t\t\t\texists: true,\r\n\t\t\t\terror: null,\r\n\t\t\t};\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Get coordinates error:', error);\r\n\t\t\treturn {\r\n\t\t\t\ttitle,\r\n\t\t\t\tcoordinates: null,\r\n\t\t\t\texists: false,\r\n\t\t\t\terror: String(error),\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Helper function to create Wikipedia client from environment\r\nfunction createClient(env: Environment): WikipediaClient {\r\n\tconst language = env.WIKIPEDIA_LANGUAGE || 'en';\r\n\tconst country = env.WIKIPEDIA_COUNTRY || null;\r\n\tconst enableCache = env.WIKIPEDIA_ENABLE_CACHE === 'true';\r\n\tconst accessToken = env.WIKIPEDIA_ACCESS_TOKEN || null;\r\n\r\n\treturn new WikipediaClient(language, country, enableCache, accessToken);\r\n}\r\n\r\n// Tool function implementations\r\n\r\nexport async function search_wikipedia(\r\n\tparams: { query: string; limit?: number },\r\n\tenv: Environment\r\n): Promise<JilebiToolResponse> {\r\n\ttry {\r\n\t\tconst client = createClient(env);\r\n\t\tconst { query, limit = 10 } = params;\r\n\r\n\t\tif (!query || !query.trim()) {\r\n\t\t\treturn {\r\n\t\t\t\tcontent: [{\r\n\t\t\t\t\ttype: 'text',\r\n\t\t\t\t\ttext: JSON.stringify({\r\n\t\t\t\t\t\tquery,\r\n\t\t\t\t\t\tresults: [],\r\n\t\t\t\t\t\tstatus: 'error',\r\n\t\t\t\t\t\tmessage: 'Empty or invalid search query provided',\r\n\t\t\t\t\t}),\r\n\t\t\t\t}],\r\n\t\t\t\tisError: true,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst results = await client.search(query, limit);\r\n\t\tconst status = results.length > 0 ? 'success' : 'no_results';\r\n\r\n\t\tconst response = {\r\n\t\t\tquery,\r\n\t\t\tresults,\r\n\t\t\tstatus,\r\n\t\t\tcount: results.length,\r\n\t\t\tlanguage: client['baseLanguage'],\r\n\t\t};\r\n\r\n\t\tif (results.length === 0) {\r\n\t\t\t(response as any).message = 'No search results found. This could indicate connectivity issues, API errors, or simply no matching articles.';\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tcontent: [{\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\ttext: JSON.stringify(response, null, 2),\r\n\t\t\t}],\r\n\t\t};\r\n\t} catch (error) {\r\n\t\treturn {\r\n\t\t\tcontent: [{\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\ttext: `Error searching Wikipedia: ${error}`,\r\n\t\t\t}],\r\n\t\t\tisError: true,\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport async function test_wikipedia_connectivity(\r\n\tparams: {},\r\n\tenv: Environment\r\n): Promise<JilebiToolResponse> {\r\n\ttry {\r\n\t\tconst client = createClient(env);\r\n\t\tconst result = await client.testConnectivity();\r\n\r\n\t\treturn {\r\n\t\t\tcontent: [{\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\ttext: JSON.stringify(result, null, 2),\r\n\t\t\t}],\r\n\t\t};\r\n\t} catch (error) {\r\n\t\treturn {\r\n\t\t\tcontent: [{\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\ttext: `Error testing connectivity: ${error}`,\r\n\t\t\t}],\r\n\t\t\tisError: true,\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport async function get_article(\r\n\tparams: { title: string },\r\n\tenv: Environment\r\n): Promise<JilebiToolResponse> {\r\n\ttry {\r\n\t\tconst client = createClient(env);\r\n\t\tconst { title } = params;\r\n\t\tconst article = await client.getArticle(title);\r\n\r\n\t\treturn {\r\n\t\t\tcontent: [{\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\ttext: JSON.stringify(article, null, 2),\r\n\t\t\t}],\r\n\t\t};\r\n\t} catch (error) {\r\n\t\treturn {\r\n\t\t\tcontent: [{\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\ttext: `Error getting article: ${error}`,\r\n\t\t\t}],\r\n\t\t\tisError: true,\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport async function get_summary(\r\n\tparams: { title: string },\r\n\tenv: Environment\r\n): Promise<JilebiToolResponse> {\r\n\ttry {\r\n\t\tconst client = createClient(env);\r\n\t\tconst { title } = params;\r\n\t\tconst summary = await client.getSummary(title);\r\n\r\n\t\treturn {\r\n\t\t\tcontent: [{\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\ttext: JSON.stringify({\r\n\t\t\t\t\ttitle,\r\n\t\t\t\t\tsummary,\r\n\t\t\t\t}, null, 2),\r\n\t\t\t}],\r\n\t\t};\r\n\t} catch (error) {\r\n\t\treturn {\r\n\t\t\tcontent: [{\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\ttext: `Error getting summary: ${error}`,\r\n\t\t\t}],\r\n\t\t\tisError: true,\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport async function summarize_article_for_query(\r\n\tparams: { title: string; query: string; max_length?: number },\r\n\tenv: Environment\r\n): Promise<JilebiToolResponse> {\r\n\ttry {\r\n\t\tconst client = createClient(env);\r\n\t\tconst { title, query, max_length = 250 } = params;\r\n\t\tconst summary = await client.summarizeForQuery(title, query, max_length);\r\n\r\n\t\treturn {\r\n\t\t\tcontent: [{\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\ttext: JSON.stringify({\r\n\t\t\t\t\ttitle,\r\n\t\t\t\t\tquery,\r\n\t\t\t\t\tsummary,\r\n\t\t\t\t}, null, 2),\r\n\t\t\t}],\r\n\t\t};\r\n\t} catch (error) {\r\n\t\treturn {\r\n\t\t\tcontent: [{\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\ttext: `Error summarizing article for query: ${error}`,\r\n\t\t\t}],\r\n\t\t\tisError: true,\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport async function summarize_article_section(\r\n\tparams: { title: string; section_title: string; max_length?: number },\r\n\tenv: Environment\r\n): Promise<JilebiToolResponse> {\r\n\ttry {\r\n\t\tconst client = createClient(env);\r\n\t\tconst { title, section_title, max_length = 150 } = params;\r\n\t\tconst summary = await client.summarizeSection(title, section_title, max_length);\r\n\r\n\t\treturn {\r\n\t\t\tcontent: [{\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\ttext: JSON.stringify({\r\n\t\t\t\t\ttitle,\r\n\t\t\t\t\tsection_title,\r\n\t\t\t\t\tsummary,\r\n\t\t\t\t}, null, 2),\r\n\t\t\t}],\r\n\t\t};\r\n\t} catch (error) {\r\n\t\treturn {\r\n\t\t\tcontent: [{\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\ttext: `Error summarizing section: ${error}`,\r\n\t\t\t}],\r\n\t\t\tisError: true,\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport async function extract_key_facts(\r\n\tparams: { title: string; topic_within_article?: string; count?: number },\r\n\tenv: Environment\r\n): Promise<JilebiToolResponse> {\r\n\ttry {\r\n\t\tconst client = createClient(env);\r\n\t\tconst { title, topic_within_article = '', count = 5 } = params;\r\n\t\tconst topic = topic_within_article.trim() || null;\r\n\t\tconst facts = await client.extractFacts(title, topic, count);\r\n\r\n\t\treturn {\r\n\t\t\tcontent: [{\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\ttext: JSON.stringify({\r\n\t\t\t\t\ttitle,\r\n\t\t\t\t\ttopic_within_article: topic_within_article,\r\n\t\t\t\t\tfacts,\r\n\t\t\t\t}, null, 2),\r\n\t\t\t}],\r\n\t\t};\r\n\t} catch (error) {\r\n\t\treturn {\r\n\t\t\tcontent: [{\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\ttext: `Error extracting key facts: ${error}`,\r\n\t\t\t}],\r\n\t\t\tisError: true,\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport async function get_related_topics(\r\n\tparams: { title: string; limit?: number },\r\n\tenv: Environment\r\n): Promise<JilebiToolResponse> {\r\n\ttry {\r\n\t\tconst client = createClient(env);\r\n\t\tconst { title, limit = 10 } = params;\r\n\t\tconst relatedTopics = await client.getRelatedTopics(title, limit);\r\n\r\n\t\treturn {\r\n\t\t\tcontent: [{\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\ttext: JSON.stringify({\r\n\t\t\t\t\ttitle,\r\n\t\t\t\t\trelated_topics: relatedTopics,\r\n\t\t\t\t}, null, 2),\r\n\t\t\t}],\r\n\t\t};\r\n\t} catch (error) {\r\n\t\treturn {\r\n\t\t\tcontent: [{\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\ttext: `Error getting related topics: ${error}`,\r\n\t\t\t}],\r\n\t\t\tisError: true,\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport async function get_sections(\r\n\tparams: { title: string },\r\n\tenv: Environment\r\n): Promise<JilebiToolResponse> {\r\n\ttry {\r\n\t\tconst client = createClient(env);\r\n\t\tconst { title } = params;\r\n\t\tconst sections = await client.getSections(title);\r\n\r\n\t\treturn {\r\n\t\t\tcontent: [{\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\ttext: JSON.stringify({\r\n\t\t\t\t\ttitle,\r\n\t\t\t\t\tsections,\r\n\t\t\t\t}, null, 2),\r\n\t\t\t}],\r\n\t\t};\r\n\t} catch (error) {\r\n\t\treturn {\r\n\t\t\tcontent: [{\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\ttext: `Error getting sections: ${error}`,\r\n\t\t\t}],\r\n\t\t\tisError: true,\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport async function get_links(\r\n\tparams: { title: string },\r\n\tenv: Environment\r\n): Promise<JilebiToolResponse> {\r\n\ttry {\r\n\t\tconst client = createClient(env);\r\n\t\tconst { title } = params;\r\n\t\tconst links = await client.getLinks(title);\r\n\r\n\t\treturn {\r\n\t\t\tcontent: [{\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\ttext: JSON.stringify({\r\n\t\t\t\t\ttitle,\r\n\t\t\t\t\tlinks,\r\n\t\t\t\t}, null, 2),\r\n\t\t\t}],\r\n\t\t};\r\n\t} catch (error) {\r\n\t\treturn {\r\n\t\t\tcontent: [{\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\ttext: `Error getting links: ${error}`,\r\n\t\t\t}],\r\n\t\t\tisError: true,\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport async function get_coordinates(\r\n\tparams: { title: string },\r\n\tenv: Environment\r\n): Promise<JilebiToolResponse> {\r\n\ttry {\r\n\t\tconst client = createClient(env);\r\n\t\tconst { title } = params;\r\n\t\tconst coordinates = await client.getCoordinates(title);\r\n\r\n\t\treturn {\r\n\t\t\tcontent: [{\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\ttext: JSON.stringify(coordinates, null, 2),\r\n\t\t\t}],\r\n\t\t};\r\n\t} catch (error) {\r\n\t\treturn {\r\n\t\t\tcontent: [{\r\n\t\t\t\ttype: 'text',\r\n\t\t\t\ttext: `Error getting coordinates: ${error}`,\r\n\t\t\t}],\r\n\t\t\tisError: true,\r\n\t\t};\r\n\t}\r\n}\r\n"],"names":[],"mappings":"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"}
{"version":3,"file":"index.js","sources":["helpers.ts","index.ts"],"sourcesContent":["// Types for the Met Museum API responses\r\nexport interface Department {\r\n\tdepartmentId: number;\r\n\tdisplayName: string;\r\n}\r\n\r\nexport interface DepartmentsResponse {\r\n\tdepartments: Department[];\r\n}\r\n\r\nexport interface SearchResponse {\r\n\ttotal: number;\r\n\tobjectIDs: number[] | null;\r\n}\r\n\r\nexport interface Tag {\r\n\tterm?: string;\r\n\tAAT_URL?: string;\r\n\tWikidata_URL?: string;\r\n}\r\n\r\nexport interface MuseumObject {\r\n\tobjectID?: number;\r\n\tisHighlight?: boolean;\r\n\taccessionNumber?: string;\r\n\taccessionYear?: string;\r\n\tisPublicDomain?: boolean;\r\n\tprimaryImage?: string;\r\n\tprimaryImageSmall?: string;\r\n\tadditionalImages?: string[];\r\n\tdepartment?: string;\r\n\tobjectName?: string;\r\n\ttitle?: string;\r\n\tculture?: string;\r\n\tperiod?: string;\r\n\tdynasty?: string;\r\n\treign?: string;\r\n\tportfolio?: string;\r\n\tartistRole?: string;\r\n\tartistPrefix?: string;\r\n\tartistDisplayName?: string;\r\n\tartistDisplayBio?: string;\r\n\tartistSuffix?: string;\r\n\tartistAlphaSort?: string;\r\n\tartistNationality?: string;\r\n\tartistBeginDate?: string;\r\n\tartistEndDate?: string;\r\n\tartistGender?: string;\r\n\tartistWikidata_URL?: string;\r\n\tartistULAN_URL?: string;\r\n\tobjectDate?: string;\r\n\tobjectBeginDate?: number;\r\n\tobjectEndDate?: number;\r\n\tmedium?: string;\r\n\tdimensions?: string;\r\n\tcreditLine?: string;\r\n\tgeographyType?: string;\r\n\tcity?: string;\r\n\tstate?: string;\r\n\tcounty?: string;\r\n\tcountry?: string;\r\n\tregion?: string;\r\n\tsubregion?: string;\r\n\tlocale?: string;\r\n\tlocus?: string;\r\n\texcavation?: string;\r\n\triver?: string;\r\n\tclassification?: string;\r\n\trightsAndReproduction?: string;\r\n\tlinkResource?: string;\r\n\tmetadataDate?: string;\r\n\trepository?: string;\r\n\tobjectURL?: string;\r\n\ttags?: Tag[] | null;\r\n\tobjectWikidata_URL?: string;\r\n\tisTimelineWork?: boolean;\r\n\tGalleryNumber?: string;\r\n}\r\n\r\n// Rate limiter implementation\r\nclass RateLimiter {\r\n\tprivate lastRequestTime = 0;\r\n\tprivate readonly minInterval = 100; // 100ms between requests\r\n\r\n\tasync fetch(url: string, options?: RequestInit): Promise<Response> {\r\n\t\tconst now = Date.now();\r\n\t\tconst timeSinceLastRequest = now - this.lastRequestTime;\r\n\r\n\t\tif (timeSinceLastRequest < this.minInterval) {\r\n\t\t\tawait new Promise(resolve => setTimeout(resolve, this.minInterval - timeSinceLastRequest));\r\n\t\t}\r\n\r\n\t\tthis.lastRequestTime = Date.now();\r\n\t\treturn fetch(url, options);\r\n\t}\r\n}\r\n\r\nexport const rateLimiter = new RateLimiter();\r\n\r\n// Type guards\r\nexport function isValidDepartmentsResponse(data: any): data is DepartmentsResponse {\r\n\treturn data && Array.isArray(data.departments) &&\r\n\t\tdata.departments.every((dept: any) =>\r\n\t\t\ttypeof dept.departmentId === 'number' && typeof dept.displayName === 'string'\r\n\t\t);\r\n}\r\n\r\nexport function isValidSearchResponse(data: any): data is SearchResponse {\r\n\treturn data && typeof data.total === 'number' &&\r\n\t\t(data.objectIDs === null || Array.isArray(data.objectIDs));\r\n}\r\n\r\nexport function isValidMuseumObject(data: any): data is MuseumObject {\r\n\treturn data && typeof data === 'object';\r\n}\r\n\r\nexport async function arrayBufferToBase64(buffer: ArrayBuffer): Promise<string> {\r\n\t// Convert ArrayBuffer to base64 using modern browser/Node.js approaches\r\n\tconst bytes = new Uint8Array(buffer);\r\n\tlet binary = '';\r\n\tfor (let i = 0; i < bytes.byteLength; i++) {\r\n\t\tbinary += String.fromCharCode(bytes[i]);\r\n\t}\r\n\treturn btoa(binary);\r\n}\r\n","import { \r\n\tarrayBufferToBase64, \r\n\tDepartment, \r\n\tisValidDepartmentsResponse, \r\n\tisValidMuseumObject, \r\n\tisValidSearchResponse, \r\n\tMuseumObject, \r\n\trateLimiter, \r\n\tTag \r\n} from \"./helpers\";\r\n\r\n// Types for Jilebi plugin responses\r\nexport interface JilebiTextContent {\r\n\ttype: 'text';\r\n\ttext: string;\r\n}\r\n\r\nexport interface JilebiImageContent {\r\n\ttype: 'image';\r\n\tdata: string;\r\n\tmimeType: string;\r\n}\r\n\r\nexport interface JilebiToolResponse {\r\n\tcontent: (JilebiTextContent | JilebiImageContent)[];\r\n\tisError?: boolean;\r\n}\r\n\r\nexport interface JilebiResource {\r\n\turi: string;\r\n\tmimeType: string;\r\n\tname: string;\r\n}\r\n\r\nexport interface JilebiResourceResponse {\r\n\tresources?: JilebiResource[];\r\n\tcontents?: Array<{\r\n\t\turi: string;\r\n\t\tmimeType: string;\r\n\t\ttext: string;\r\n\t}>;\r\n}\r\n\r\n\r\n/**\r\n * Get detailed information about a museum object by its ID\r\n */\r\nexport async function getMuseumObject(params: {\r\n\tobjectId: number;\r\n\treturnImage?: boolean;\r\n}, env: Environment): Promise<JilebiToolResponse> {\r\n\ttry {\r\n\t\tconst { objectId, returnImage = true } = params;\r\n\t\tconst baseURL = 'https://collectionapi.metmuseum.org/public/collection/v1/objects/';\r\n\t\tconst url = `${baseURL}${objectId}`;\r\n\r\n\t\tconst response = await rateLimiter.fetch(url.toString());\r\n\r\n\t\tif (!response.ok) {\r\n\t\t\tthrow new Error(`HTTP error! status: ${response.status}`);\r\n\t\t}\r\n\r\n\t\tconst jsonData = await response.json();\r\n\r\n\t\tif (!isValidMuseumObject(jsonData)) {\r\n\t\t\tthrow new Error('Invalid response format from object API');\r\n\t\t}\r\n\r\n\t\tconst data = jsonData as MuseumObject;\r\n\t\tconst text = `Title: ${data.title || 'Unknown'}\\n`\r\n\t\t\t+ `${data.artistDisplayName ? `Artist: ${data.artistDisplayName}\\n` : ''}`\r\n\t\t\t+ `${data.artistDisplayBio ? `Artist Bio: ${data.artistDisplayBio}\\n` : ''}`\r\n\t\t\t+ `${data.department ? `Department: ${data.department}\\n` : ''}`\r\n\t\t\t+ `${data.creditLine ? `Credit Line: ${data.creditLine}\\n` : ''}`\r\n\t\t\t+ `${data.medium ? `Medium: ${data.medium}\\n` : ''}`\r\n\t\t\t+ `${data.dimensions ? `Dimensions: ${data.dimensions}\\n` : ''}`\r\n\t\t\t+ `${data.primaryImage ? `Primary Image URL: ${data.primaryImage}\\n` : ''}`\r\n\t\t\t+ `${data.tags ? `Tags: ${data.tags.map((tag: Tag) => tag.term).filter(Boolean).join(', ')}\\n` : ''}`;\r\n\r\n\t\tconst content: (JilebiTextContent | JilebiImageContent)[] = [{\r\n\t\t\ttype: 'text',\r\n\t\t\ttext,\r\n\t\t} as JilebiTextContent];\r\n\r\n\t\tif (returnImage && data.primaryImageSmall) {\r\n\t\t\ttry {\r\n\t\t\t\t// Fetch the image and convert to base64\r\n\t\t\t\tconst imageResponse = await rateLimiter.fetch(data.primaryImageSmall);\r\n\t\t\t\tif (imageResponse.ok) {\r\n\t\t\t\t\tconst imageBuffer = await imageResponse.arrayBuffer();\r\n\t\t\t\t\tconst base64Image = await arrayBufferToBase64(imageBuffer);\r\n\r\n\t\t\t\t\tcontent.push({\r\n\t\t\t\t\t\ttype: 'image',\r\n\t\t\t\t\t\tdata: base64Image,\r\n\t\t\t\t\t\tmimeType: 'image/jpeg',\r\n\t\t\t\t\t} as JilebiImageContent);\r\n\r\n\t\t\t\t}\r\n\t\t\t} catch (imageError) {\r\n\t\t\t\tconsole.warn('Failed to fetch image:', imageError);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn { content };\r\n\t} catch (error) {\r\n\t\tconsole.error('Error getting museum object:', error);\r\n\t\treturn {\r\n\t\t\tcontent: [{ type: 'text', text: `Error getting museum object id ${params.objectId}: ${error}` } as JilebiTextContent],\r\n\t\t\tisError: true,\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * List all departments in the Metropolitan Museum of Art\r\n */\r\nexport async function listDepartments(request: {}, env: Environment): Promise<JilebiToolResponse> {\r\n\ttry {\r\n\t\tconst apiUrl = 'https://collectionapi.metmuseum.org/public/collection/v1/departments';\r\n\t\tconst response = await rateLimiter.fetch(apiUrl);\r\n\r\n\t\tif (!response.ok) {\r\n\t\t\tthrow new Error(`HTTP error! status: ${response.status}`);\r\n\t\t}\r\n\r\n\t\tconst jsonData = await response.json();\r\n\r\n\t\tif (!isValidDepartmentsResponse(jsonData)) {\r\n\t\t\tthrow new Error('Invalid response format from departments API');\r\n\t\t}\r\n\r\n\t\tconst text = jsonData.departments.map((department: Department) => {\r\n\t\t\treturn `Department ID: ${department.departmentId}, Display Name: ${department.displayName}`;\r\n\t\t}).join('\\n');\r\n\r\n\t\treturn {\r\n\t\t\tcontent: [{ type: 'text', text } as JilebiTextContent],\r\n\t\t\tisError: false,\r\n\t\t};\r\n\t} catch (error) {\r\n\t\tconsole.error('Error listing departments:', error);\r\n\t\treturn {\r\n\t\t\tcontent: [{ type: 'text', text: `Error listing departments: ${error}` } as JilebiTextContent],\r\n\t\t\tisError: true,\r\n\t\t};\r\n\t}\r\n}\r\n\r\n/**\r\n * Search for objects in the Metropolitan Museum of Art collection\r\n */\r\nexport async function searchMuseumObjects(params: {\r\n\tq: string;\r\n\thasImages?: boolean;\r\n\ttitle?: boolean;\r\n\tdepartmentId?: number;\r\n}, env: Environment): Promise<JilebiToolResponse> {\r\n\ttry {\r\n\t\tconst { q, hasImages = false, title = false, departmentId } = params;\r\n\t\tconst apiBaseUrl = 'https://collectionapi.metmuseum.org/public/collection/v1/search';\r\n\r\n\t\tconst url = new URL(apiBaseUrl);\r\n\t\turl.searchParams.set('q', q);\r\n\r\n\t\tif (hasImages) {\r\n\t\t\turl.searchParams.set('hasImages', 'true');\r\n\t\t}\r\n\r\n\t\tif (title && !hasImages) {\r\n\t\t\turl.searchParams.set('title', 'true');\r\n\t\t}\r\n\r\n\t\tif (departmentId) {\r\n\t\t\turl.searchParams.set('departmentId', departmentId.toString());\r\n\t\t}\r\n\r\n\t\tconst response = await rateLimiter.fetch(url.toString());\r\n\r\n\t\tif (!response.ok) {\r\n\t\t\tthrow new Error(`HTTP error! status: ${response.status}`);\r\n\t\t}\r\n\r\n\t\tconst jsonData = await response.json();\r\n\r\n\t\tif (!isValidSearchResponse(jsonData)) {\r\n\t\t\tthrow new Error('Invalid response format from search API');\r\n\t\t}\r\n\r\n\t\tif (jsonData.total === 0 || !jsonData.objectIDs) {\r\n\t\t\treturn {\r\n\t\t\t\tcontent: [{ type: 'text', text: 'No objects found' } as JilebiTextContent],\r\n\t\t\t\tisError: false,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tconst text = `Total objects found: ${jsonData.total}\\nObject IDs: ${jsonData.objectIDs.join(', ')}`;\r\n\t\treturn {\r\n\t\t\tcontent: [{ type: 'text', text } as JilebiTextContent],\r\n\t\t\tisError: false,\r\n\t\t};\r\n\t} catch (error) {\r\n\t\tconsole.error('Error searching museum objects:', error);\r\n\t\treturn {\r\n\t\t\tcontent: [{ type: 'text', text: `Error searching museum objects: ${error}` } as JilebiTextContent],\r\n\t\t\tisError: true,\r\n\t\t};\r\n\t}\r\n}\r\n"],"names":[],"mappings":"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"}